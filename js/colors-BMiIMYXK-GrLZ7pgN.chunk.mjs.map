{"version":3,"file":"colors-BMiIMYXK-GrLZ7pgN.chunk.mjs","sources":["../node_modules/@nextcloud/vue/dist/chunks/colors-BMiIMYXK.mjs"],"sourcesContent":["import { r as register, t as t3, a as t } from \"./_l10n-DSLCwJSN.mjs\";\nregister(t3);\nclass Color {\n  /**\n   * @param r - The red value\n   * @param g - The green value\n   * @param b - The blue value\n   * @param name - The name of the color\n   */\n  constructor(r, g, b, name) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.name = name;\n    this.r = Math.min(r, 255);\n    this.g = Math.min(g, 255);\n    this.b = Math.min(b, 255);\n    this.name = name;\n  }\n  /**\n   * The hexadecimal color string.\n   */\n  get color() {\n    const toHex = (int) => \"00\".concat(int.toString(16)).slice(-2);\n    return \"#\".concat(toHex(this.r)).concat(toHex(this.g)).concat(toHex(this.b));\n  }\n}\nfunction calculateStepIncrement(steps, color1, color2) {\n  return {\n    r: (color2.r - color1.r) / steps,\n    g: (color2.g - color1.g) / steps,\n    b: (color2.b - color1.b) / steps\n  };\n}\nfunction mixPalette(steps, color1, color2) {\n  const palette = [];\n  palette.push(color1);\n  const increment = calculateStepIncrement(steps, color1, color2);\n  for (let i = 1; i < steps; i++) {\n    const r = Math.floor(color1.r + increment.r * i);\n    const g = Math.floor(color1.g + increment.g * i);\n    const b = Math.floor(color1.b + increment.b * i);\n    palette.push(new Color(r, g, b));\n  }\n  return palette;\n}\nconst COLOR_RED = new Color(182, 70, 157, t(\"Purple\"));\nconst COLOR_YELLOW = new Color(221, 203, 85, t(\"Gold\"));\nconst COLOR_BLUE = new Color(0, 130, 201, t(\"Nextcloud blue\"));\nconst COLOR_BLACK = new Color(0, 0, 0, t(\"Black\"));\nconst COLOR_WHITE = new Color(255, 255, 255, t(\"White\"));\nconst defaultPalette = [\n  /* eslint-disable @stylistic/function-call-argument-newline -- Allow to put translators comments */\n  COLOR_RED,\n  new Color(\n    191,\n    103,\n    139,\n    t(\"Rosy brown\")\n    // TRANSLATORS: A color name for RGB(191, 103, 139)\n  ),\n  new Color(\n    201,\n    136,\n    121,\n    t(\"Feldspar\")\n    // TRANSLATORS: A color name for RGB(201, 136, 121)\n  ),\n  new Color(\n    211,\n    169,\n    103,\n    t(\"Whiskey\")\n    // TRANSLATORS: A color name for RGB(211, 169, 103)\n  ),\n  COLOR_YELLOW,\n  new Color(\n    165,\n    184,\n    114,\n    t(\"Olivine\")\n    // TRANSLATORS: A color name for RGB(165, 184, 114)\n  ),\n  new Color(\n    110,\n    166,\n    143,\n    t(\"Acapulco\")\n    // TRANSLATORS: A color name for RGB(110, 166, 143)\n  ),\n  new Color(\n    55,\n    148,\n    172,\n    t(\"Boston Blue\")\n    // TRANSLATORS: A color name for RGB(55, 148, 172)\n  ),\n  COLOR_BLUE,\n  new Color(\n    45,\n    115,\n    190,\n    t(\"Mariner\")\n    // TRANSLATORS: A color name for RGB(45, 115, 190)\n  ),\n  new Color(\n    91,\n    100,\n    179,\n    t(\"Blue Violet\")\n    // TRANSLATORS: A color name for RGB(91, 100, 179)\n  ),\n  new Color(\n    136,\n    85,\n    168,\n    t(\"Deluge\")\n    // TRANSLATORS: A color name for RGB(136, 85, 168)\n  )\n  /* eslint-enable @stylistic/function-call-argument-newline */\n];\nfunction generatePalette(steps) {\n  const palette1 = mixPalette(steps, COLOR_RED, COLOR_YELLOW);\n  const palette2 = mixPalette(steps, COLOR_YELLOW, COLOR_BLUE);\n  const palette3 = mixPalette(steps, COLOR_BLUE, COLOR_RED);\n  return palette1.concat(palette2).concat(palette3);\n}\nexport {\n  Color as C,\n  COLOR_BLACK as a,\n  COLOR_WHITE as b,\n  defaultPalette as d,\n  generatePalette as g\n};\n//# sourceMappingURL=colors-BMiIMYXK.mjs.map\n"],"names":["register","t3","Color","r","g","b","name","toHex","int","calculateStepIncrement","steps","color1","color2","mixPalette","palette","increment","i","COLOR_RED","t","COLOR_YELLOW","COLOR_BLUE","COLOR_BLACK","COLOR_WHITE","defaultPalette","generatePalette","palette1","palette2","palette3"],"mappings":";uDACAA,EAASC,CAAE,EACX,MAAMC,CAAM,CAOV,YAAYC,EAAGC,EAAGC,EAAGC,EAAM,CACzB,KAAK,EAAIH,EACT,KAAK,EAAIC,EACT,KAAK,EAAIC,EACT,KAAK,KAAOC,EACZ,KAAK,EAAI,KAAK,IAAIH,EAAG,GAAG,EACxB,KAAK,EAAI,KAAK,IAAIC,EAAG,GAAG,EACxB,KAAK,EAAI,KAAK,IAAIC,EAAG,GAAG,EACxB,KAAK,KAAOC,CACd,CAIA,IAAI,OAAQ,CACV,MAAMC,EAASC,GAAQ,KAAK,OAAOA,EAAI,SAAS,EAAE,CAAC,EAAE,MAAM,EAAE,EAC7D,MAAO,IAAI,OAAOD,EAAM,KAAK,CAAC,CAAC,EAAE,OAAOA,EAAM,KAAK,CAAC,CAAC,EAAE,OAAOA,EAAM,KAAK,CAAC,CAAC,CAC7E,CACF,CACA,SAASE,EAAuBC,EAAOC,EAAQC,EAAQ,CACrD,MAAO,CACL,GAAIA,EAAO,EAAID,EAAO,GAAKD,EAC3B,GAAIE,EAAO,EAAID,EAAO,GAAKD,EAC3B,GAAIE,EAAO,EAAID,EAAO,GAAKD,CAC/B,CACA,CACA,SAASG,EAAWH,EAAOC,EAAQC,EAAQ,CACzC,MAAME,EAAU,CAAA,EAChBA,EAAQ,KAAKH,CAAM,EACnB,MAAMI,EAAYN,EAAuBC,EAAOC,EAAQC,CAAM,EAC9D,QAASI,EAAI,EAAGA,EAAIN,EAAOM,IAAK,CAC9B,MAAMb,EAAI,KAAK,MAAMQ,EAAO,EAAII,EAAU,EAAIC,CAAC,EACzC,EAAI,KAAK,MAAML,EAAO,EAAII,EAAU,EAAIC,CAAC,EACzCX,EAAI,KAAK,MAAMM,EAAO,EAAII,EAAU,EAAIC,CAAC,EAC/CF,EAAQ,KAAK,IAAIZ,EAAMC,EAAG,EAAGE,CAAC,CAAC,CACjC,CACA,OAAOS,CACT,CACA,MAAMG,EAAY,IAAIf,EAAM,IAAK,GAAI,IAAKgB,EAAE,QAAQ,CAAC,EAC/CC,EAAe,IAAIjB,EAAM,IAAK,IAAK,GAAIgB,EAAE,MAAM,CAAC,EAChDE,EAAa,IAAIlB,EAAM,EAAG,IAAK,IAAKgB,EAAE,gBAAgB,CAAC,EACvDG,EAAc,IAAInB,EAAM,EAAG,EAAG,EAAGgB,EAAE,OAAO,CAAC,EAC3CI,EAAc,IAAIpB,EAAM,IAAK,IAAK,IAAKgB,EAAE,OAAO,CAAC,EACjDK,EAAiB,CAErBN,EACA,IAAIf,EACF,IACA,IACA,IACAgB,EAAE,YAAY,CAElB,EACE,IAAIhB,EACF,IACA,IACA,IACAgB,EAAE,UAAU,CAEhB,EACE,IAAIhB,EACF,IACA,IACA,IACAgB,EAAE,SAAS,CAEf,EACEC,EACA,IAAIjB,EACF,IACA,IACA,IACAgB,EAAE,SAAS,CAEf,EACE,IAAIhB,EACF,IACA,IACA,IACAgB,EAAE,UAAU,CAEhB,EACE,IAAIhB,EACF,GACA,IACA,IACAgB,EAAE,aAAa,CAEnB,EACEE,EACA,IAAIlB,EACF,GACA,IACA,IACAgB,EAAE,SAAS,CAEf,EACE,IAAIhB,EACF,GACA,IACA,IACAgB,EAAE,aAAa,CAEnB,EACE,IAAIhB,EACF,IACA,GACA,IACAgB,EAAE,QAAQ,CAEd,CAEA,EACA,SAASM,EAAgBd,EAAO,CAC9B,MAAMe,EAAWZ,EAAWH,EAAOO,EAAWE,CAAY,EACpDO,EAAWb,EAAWH,EAAOS,EAAcC,CAAU,EACrDO,EAAWd,EAAWH,EAAOU,EAAYH,CAAS,EACxD,OAAOQ,EAAS,OAAOC,CAAQ,EAAE,OAAOC,CAAQ,CAClD","x_google_ignoreList":[0]}